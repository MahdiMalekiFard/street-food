<?php

namespace App\Actions\{{model}};

use App\Actions\Translation\SyncTranslationAction;
use App\Models\{{model}};
use App\Repositories\{{model}}\{{model}}RepositoryInterface;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\DB;
use Lorisleiva\Actions\Concerns\AsAction;

class Update{{model}}Action
{
    use AsAction;

    public function __construct(
        private readonly {{model}}RepositoryInterface $repository,
        private readonly SyncTranslationAction $syncTranslationAction,
    ) {}


    /**
     * @param {{model}}                                          ${{cmodel}}
     * @param array{title:string,description:string}             $payload
     * @return {{model}}
     */
    public function handle({{model}} ${{cmodel}}, array $payload): {{model}}
    {
        return DB::transaction(function () use (${{cmodel}}, $payload) {
            $this->repository->update(${{cmodel}}, $payload);
            $this->syncTranslationAction->handle(${{cmodel}}, Arr::only($payload, ['title', 'description', 'body']));

            return ${{cmodel}}->refresh();
        });
    }
}
